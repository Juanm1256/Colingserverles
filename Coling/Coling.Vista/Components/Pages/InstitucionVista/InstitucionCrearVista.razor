@page "/institucion/crear"

@inject IInstitucionService servicioInstitucion
@inject NavigationManager nav
@inject SweetAlertService sweetAlertService

<h3>Crear Institucion</h3>

<InstitucionFormulario @ref="insform"institucion="institucion" OnValidSubmit="Crear" Cancelar="Navegar"></InstitucionFormulario>

@code {
    private Institucion institucion = new();
    private InstitucionFormulario? insform;

    private async Task Crear()
    {
        string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoiSnVhbiIsInJvbCI6IkFkbWluIiwiZXN0YWRvIjoiQWN0aXZvIiwiZXhwIjoxNzEyMTA2NzQ5fQ.4zmQxlHhPH9CbBdgmPJFSwpICig3SJzHjVKZpc-pJBc";
        institucion.PartitionKey = "Educacion";
        var respuesta = await servicioInstitucion.InsertarInstitucion(institucion, token);
        if (!respuesta)
        {
            await sweetAlertService.FireAsync("Error", "No se pudo guardar", SweetAlertIcon.Error);
            return;
        }
        Navegar();
    }

    private void Navegar()
    {
        insform!.formularioPostOk = true;
        nav.NavigateTo("/instituciones", forceLoad: true);
    }
}
